{"version":3,"sources":["actions/types.js","components/project/ProjectItem.js","actions/projectActions.js","components/project/CreateProjectButton.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","reducers/renderedReducer.js","store.js","securityUtils/componentIsRendered.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/layout/Header.js","components/project/AddProject.js","components/project/UpdateProject.js","actions/backlogActions.js","components/projectBoard/projectTasks/ProjectTask.js","components/projectBoard/Backlog.js","components/projectBoard/ProjectBoard.js","components/projectBoard/projectTasks/AddProjectTask.js","components/projectBoard/projectTasks/UpdateProjectTask.js","components/layout/Landing.js","components/userManagement/Register.js","components/userManagement/Login.js","securityUtils/SecuredRoute.js","components/userManagement/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","ProjectItem","onDeleteClick","id","props","deleteProject","project","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","dispatch","a","async","window","confirm","axios","delete","type","payload","CreateProjectButton","Fragment","initialState","projects","project_tasks","project_task","validToken","user","boolActionPayload","combineReducers","errors","state","action","filter","backlog","projectSequence","security","rendered","middleware","thunk","reactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","componentIsRendered","Dashboard","getProjects","map","key","get","res","data","setJWTToken","token","defaults","headers","common","logout","console","log","localStorage","removeItem","Header","location","href","headerLinks","userIsNotAUthenticated","data-toggle","data-target","userIsAUthenticated","name","AddProject","startDate","endDate","onChange","onSubmit","nextProps","setState","e","target","value","preventDefault","newProject","createProject","history","classnames","placeholder","post","push","response","UpdateProject","match","params","getProject","updateProject","disabled","put","addProjectTask","backlog_id","ProjectTask","project_id","task_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","message","role","boardAlgorithm","err","AddProjectTask","dueDate","newTask","PropTypes","func","isRequired","object","UpdateProjectTask","getProjectTask","updateProjectTask","Landing","Register","username","password","newUser","createNewUser","Login","loginRequest","login","setItem","decoded","jwt_decode","component","otherProps","currentTime","Date","now","toString","slice","parseInt","exp","render","NotFound","JwtToken","jwtToken","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0d6d3a8.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for backlog actions\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n//type for security\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board</i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/projects\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.put(\"/projects\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/projects\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/projects/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `Are you sure you want to delete the project with ID ${id}   ? `\r\n    )\r\n  ) {\r\n    await axios.delete(`/projects/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\nconst boolActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: boolActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\nimport renderedReducer from \"./renderedReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n  rendered: renderedReducer\r\n});\r\n","const initialState = false;\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"RENDERED\":\r\n      return true;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nlet store;\r\n\r\nconst reactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && reactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), reactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import store from \"../store\";\r\n\r\nexport default function componentIsRendered() {\r\n  store.dispatch({\r\n    type: \"RENDERED\"\r\n  });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./project/ProjectItem\";\r\nimport CreateProjectButton from \"./project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport propTypes from \"prop-types\";\r\nimport componentIsRendered from \"../securityUtils/componentIsRendered\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n  render() {\r\n    componentIsRendered();\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: propTypes.object.isRequired,\r\n  getProjects: propTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = loginRequest => async dispatch => {\r\n  try {\r\n    const res = await axios.post(\"/users/login\", loginRequest);\r\n    const { token } = res.data;\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    setJWTToken(token);\r\n    const decoded = jwt_decode(token);\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  console.log(\"hi\");\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsNotAUthenticated = (\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Personal Project Management Tool\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#mobile-nav\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link \" to=\"/login\">\r\n                Login\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/register\">\r\n                Register\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const userIsAUthenticated = (\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/dashboard\">\r\n          Personal Project Management Tool\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#mobile-nav\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/dashboard\">\r\n                Dashboard\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link \" to=\"/dashboard\">\r\n                <i className=\"fas fa-user-circle mr-2\" />\r\n                {user.name}\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className=\"nav-link\"\r\n                to=\"/logout\"\r\n                onClick={this.logout.bind(this)}\r\n              >\r\n                Logout\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (user && validToken) {\r\n      headerLinks = userIsAUthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAUthenticated;\r\n    }\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        {headerLinks}\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\nimport componentIsRendered from \"../../securityUtils/componentIsRendered\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    };\r\n\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    componentIsRendered();\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    ></textarea>\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.startDate\r\n                      })}\r\n                      name=\"startDate\"\r\n                      value={this.state.startDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.startDate && (\r\n                      <div className=\"invalid-feedback\">{errors.startDate}</div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.endDate\r\n                      })}\r\n                      name=\"endDate\"\r\n                      value={this.state.endDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.endDate && (\r\n                      <div className=\"invalid-feedback\">{errors.endDate}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: propTypes.func.isRequired,\r\n  errors: propTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import React, { Component } from \"react\";\r\nimport { getProject, updateProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate\r\n    });\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    };\r\n\r\n    this.props.updateProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      disabled\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    ></textarea>\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.startDate\r\n                      })}\r\n                      name=\"startDate\"\r\n                      value={this.state.startDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.startDate && (\r\n                      <div className=\"invalid-feedback\">{errors.startDate}</div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.endDate\r\n                      })}\r\n                      name=\"endDate\"\r\n                      value={this.state.endDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.endDate && (\r\n                      <div className=\"invalid-feedback\">{errors.endDate}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, updateProject })(\r\n  UpdateProject\r\n);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  const res = await axios.get(`/backlog/${backlog_id}`);\r\n  try {\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  task_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/backlog/${backlog_id}/${task_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  task_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.put(`/backlog/${backlog_id}/${task_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (project_id, task_id) => async dispatch => {\r\n  if (\r\n    window.confirm(`Are you sure you want to delete project task ${task_id} ?`)\r\n  ) {\r\n    await axios.delete(`/backlog/${project_id}/${task_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: task_id\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport componentIsRendered from \"../../../securityUtils/componentIsRendered\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(project_id, task_id) {\r\n    this.props.deleteProjectTask(project_id, task_id);\r\n  }\r\n  render() {\r\n    componentIsRendered();\r\n    const { project_task } = this.props;\r\n\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./projectTasks/ProjectTask\";\r\nimport componentIsRendered from \"../../securityUtils/componentIsRendered\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    componentIsRendered();\r\n    const { project_tasks_prop } = this.props;\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n          </div>\r\n\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\nimport componentIsRendered from \"../../securityUtils/componentIsRendered\";\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  render() {\r\n    componentIsRendered();\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.message === \"The Project was not found\") {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.message}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"info\">\r\n              No project tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport componentIsRendered from \"../../../securityUtils/componentIsRendered\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n    console.log(newTask);\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    componentIsRendered();\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.acceptanceCriteria\r\n                    })}\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n\r\n                  {errors.acceptanceCriteria && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.acceptanceCriteria}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.dueDate\r\n                    })}\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  {errors.dueDate && (\r\n                    <div className=\"invalid-feedback\">{errors.dueDate}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.priority\r\n                    })}\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n\r\n                  {errors.priority && (\r\n                    <div className=\"invalid-feedback\">{errors.priority}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.status\r\n                    })}\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n\r\n                  {errors.status && (\r\n                    <div className=\"invalid-feedback\">{errors.status}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\naddProjectTask.PropTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport componentIsRendered from \"../../../securityUtils/componentIsRendered\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      errors: \"\"\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, task_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, task_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier\r\n    };\r\n\r\n    console.log(updateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      updateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n  render() {\r\n    componentIsRendered();\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project task ID:\r\n                {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.acceptanceCriteria\r\n                    })}\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.acceptanceCriteria && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.acceptanceCriteria}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.dueDate\r\n                    })}\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.dueDate && (\r\n                    <div className=\"invalid-feedback\">{errors.dueDate}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.priority\r\n                    })}\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                  {errors.priority && (\r\n                    <div className=\"invalid-feedback\">{errors.priority}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.status\r\n                    })}\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                  {errors.status && (\r\n                    <div className=\"invalid-feedback\">{errors.status}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport componentIsRendered from \"../../securityUtils/componentIsRendered\";\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    componentIsRendered();\r\n\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account and start working on your own Project\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport componentIsRendered from \"../../securityUtils/componentIsRendered\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      name: \"\",\r\n      password: \"\",\r\n      confirm: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      name: this.state.name,\r\n      password: this.state.password,\r\n      confirm: this.state.confirm\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    componentIsRendered();\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.name\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.name && (\r\n                    <div className=\"invalid-feedback\">{errors.name} </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address(Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username} </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password} </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirm\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirm\"\r\n                    value={this.state.confirm}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirm && (\r\n                    <div className=\"invalid-feedback\">{errors.confirm} </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/securityActions\";\r\nimport componentIsRendered from \"../../securityUtils/componentIsRendered\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(loginRequest);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    componentIsRendered();\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport store from \"../store\";\r\nimport { logout } from \"../actions/securityActions\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => {\r\n  var currentTime = Date.now();\r\n  currentTime = currentTime.toString();\r\n  currentTime = currentTime.slice(0, -3);\r\n  currentTime = parseInt(currentTime);\r\n  // if (security.user.exp === undefined) {\r\n  //   window.location.href = \"/login\";\r\n  // }\r\n  if (security.user.exp < currentTime) {\r\n    store.dispatch(logout());\r\n    window.location.href = \"/login\";\r\n  }\r\n  return (\r\n    <Route\r\n      {...otherProps}\r\n      render={props =>\r\n        security.validToken === true ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass NotFound extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rendered: props.rendered\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      rendered: nextProps.rendered\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //alert(this.state.rendered);\r\n    const { rendered } = this.state;\r\n    if (rendered === false) {\r\n      return (\r\n        <div className=\"d-flex flex-column  align-items-center\">\r\n          <h1 className=\"errormsg d-flex\">404</h1>\r\n          <h4 className=\"errormsg d-flex pb-5\">\r\n            The page you are looking for doesnt exist\r\n          </h4>\r\n          <div className=\"notFoundPic\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div></div>;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  rendered: state.rendered\r\n});\r\n\r\nexport default connect(mapStateToProps)(NotFound);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/layout/Header\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/project/AddProject\";\r\nimport UpdateProject from \"./components/project/UpdateProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport ProjectBoard from \"./components/projectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/projectBoard/projectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/projectBoard/projectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/layout/Landing\";\r\nimport Register from \"./components/userManagement/Register\";\r\nimport Login from \"./components/userManagement/Login\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"./securityUtils/setJWTToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\";\r\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\r\nimport NotFound from \"./components/userManagement/NotFound\";\r\n\r\nconst JwtToken = localStorage.jwtToken;\r\n\r\nif (JwtToken) {\r\n  setJWTToken(JwtToken);\r\n  const decoded = jwt_decode(JwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  });\r\n\r\n  var currentTime = Date.now();\r\n  currentTime = currentTime.toString();\r\n  currentTime = currentTime.slice(0, -3);\r\n  currentTime = parseInt(currentTime);\r\n\r\n  if (decoded.exp < currentTime) {\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Switch>\r\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/updateProject/:id\"\r\n              component={UpdateProject}\r\n            />\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/projectBoard/:id\"\r\n              component={ProjectBoard}\r\n            />\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/addProjectTask/:id\"\r\n              component={AddProjectTask}\r\n            />\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/updateProjectTask/:backlog_id/:task_id\"\r\n              component={UpdateProjectTask}\r\n            />\r\n          </Switch>\r\n          <Route exact path=\"*\" component={NotFound} />\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}